'''1. Поработайте с переменными, создайте несколько, выведите на экран.
Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.'''

# создание и вывод переменных
d = 5
k = d + 5
print("5+5 =", k)

part_1 = 'original'
part_2 = 'sin'
print(part_1 + " " + part_2)

# запрос, сохранение и вывод чисел и текста на экран

text = input("Введите имя: ")
print("Введенное имя: " + text)

number = input("Введите возраст: ")
print("Введенный возраст: " + number)

'''2. Пользователь вводит время в секундах. Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс. 
Используйте форматирование строк.'''

quantity = input("Введите количество секунд: ")
ss = int(quantity) % (24 * 3600)
hh = ss // 3600
ss %= 3600
mm = ss // 60
ss %= 60
print("%02d:%02d:%02d" % (hh, mm, ss)) # форматированный вывод

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.

number = int(input('Введите целое число от 0 до 9: '))
if (number >= 0 and number <= 9):
    print(str(number) + str(number + number) + str(number + number + number))
else:
    print("Неверное число " + str(number))

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.Для решения используйте цикл while и арифметические операции.

number_positive = input("Введите целое положительное число: ")
cur_symbol_num = 0
max_number = 0
while (cur_symbol_num < len(number_positive)):  # перебор по очереди всех символов в строке, пока она не закончится
    current_number = int(number_positive[cur_symbol_num])  # текущий символ в числе пользователя
    if (current_number > max_number):  # проверка, что текущий символ больше, чем самый больший из найденных ранее
        max_number = current_number
    cur_symbol_num += 1  #увеличение номера позиции в строке
print("Максимальное число " + str(max_number))

'''5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает фирма. 
Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки. Выведите соответствующее сообщение.'''

profit = int(input("Введите значение выручки: "))
cost = int(input("Введите значение издержек: "))
if profit > cost:
    print("Выручка больше издержек")
elif profit < cost:
    print("Издержки больше выручки")

'''6. Если фирма отработала с прибылью, вычислите рентабельность выручки. 
Это отношение прибыли к выручке. Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.'''

profit_2 = int(input("Введите значение прибыли: "))
revenue = int(input("Введите значение выручки: "))
employees = int(input("Введите количество сотрудников: "))
profitability = ((profit_2 / revenue) * 100) # обычное деление, не целочисленное
profit_per_employee = profitability / employees
print("Прибыль фирмы в расчете на одного сотрудника составляет: " + str(profit_per_employee))

'''7. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. 
Каждый день спортсмен увеличивал результат на 10% относительно предыдущего. 
Требуется определить номер дня, на который результат спортсмена составит не менее b километров. 
Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22
Ответ: на шестой день спортсмен достиг результата — не менее 3 км.'''

a = int(input('Введите результат первого дня пробежки: '))
b = int(input('Введите результат который требуется достичь: '))
day = 1
while a < b:
    print("%1d-й день: %.2f" % (day, a))
    a += a * 0.1
    day += 1
print("%1d-й день: %.2f" % (day, a))
print("Ответ: на %1d день спортсмен достиг результата — не менее %1d км." % (day, b))